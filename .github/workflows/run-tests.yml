name: unit tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: freeglut3-dev
        if: matrix.os == 'ubuntu-latest'
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
      - name: Test with tox
        env:
          COVERAGE_FILE: coverage/.coverage.${{ matrix.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ matrix.os }}-py${{ matrix.python-version }}
        run: |
          mkdir coverage
          tox
      - name: Store coverage results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true
        if: matrix.os == 'ubuntu-latest'
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ !cancelled() && matrix.os == 'ubuntu-latest' }}

  coverage-combine:
    needs:
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install coverage[toml]
      - name: Get coverage results
        uses: actions/download-artifact@v4
        with:
          path: coverage
          pattern: coverage-*
          merge-multiple: true
      - name: combine reports
        run: |
          coverage combine coverage
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
