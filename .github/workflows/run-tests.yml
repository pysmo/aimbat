name: unit tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: freeglut3-dev
        if: matrix.os == 'ubuntu-latest'
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: run tests
        env:
          COVERAGE_FILE: coverage/.coverage.${{ matrix.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ matrix.os }}-py${{ matrix.python-version }}
        run: |
          mkdir coverage
          uv sync --locked --all-extras --no-group docs
          uv run black . --check --diff --color
          uv run ruff check
          uv run py.test --mpl --mypy --cov=aimbat --cov-append --cov-report=term-missing  --junitxml=junit.xml -vs

      - name: Store coverage results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true
        if: matrix.os == 'ubuntu-latest'
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ !cancelled() && matrix.os == 'ubuntu-latest' }}

  coverage-combine:
    needs:
      - test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version-file: ".python-version"
      - name: Download coverage results
        uses: actions/download-artifact@v4
        with:
          path: coverage
          pattern: coverage-*
          merge-multiple: true
      - name: combine reports
        run: |
          uvx "coverage[toml]" combine coverage
          uvx "coverage[toml]" xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
