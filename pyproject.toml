[tool.poetry]
name = "aimbat"
version = "2.0.0-dev0"
description = "AIMBAT: Automated and Interactive Measurement of Body-wave Arrival Times."
readme = "README.md"
authors = ["Xiaoting Lou <xlou@u.northwestern.edu>", "Simon M. Lloyd <simon@slloyd.net>"]
license = "GPL-3.0-or-later"
documentation = "https://pysmo.readthedocs.io"
exclude = [
    "tests",
    "docs",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]


[tool.poetry.scripts]
aimbat = 'aimbat.app:app'
aimbat_old = 'aimbat.app_old:cli'


[tool.poetry.dependencies]
python = ">=3.12,<3.14"
sqlmodel = "^0.0.24"
pysmo = {git = "https://github.com/pysmo/pysmo.git", rev = "master"}
rich = "^13.9.4"
matplotlib = "^3.10.1"
pyside6 = "^6.8.2.1"
pyqtgraph = "^0.13.7"
icecream = "^2.1.4"
jupyter-rfb = "^0.5.1"
cyclopts = "^3.22.5"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
pytest-mpl = "^0.17.0"
pytest-cov = "^6.0.0"
pytest-mypy = "^0.10.3"
pytest-sugar = "^1.0.0"
ruff = "^0.11.2"
pytest-depends = "^1.0.1"
nbmake = "^1.5.5"
pytest-qt = "^4.4.0"


[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^25.1.0"}


[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.6.9"
mkdocstrings = {extras = ["python"], version = "^0.29.0"}
markdown-include = "^0.8.1"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.2"
mkdocs-section-index = "^0.3.9"
termynal = "^0.13.0"
jupyterlab = "^4.3.6"
mkdocs-jupyter = "^0.25.1"
ipympl = "^0.9.7"
mkdocs-bibtex = "^4.2.5"




[tool.pytest.ini_options]
# xvfb_width = 1920
# xvfb_height = 1080
testpaths = [
  "tests",
]

[tool.mypy]
namespace_packages = true
disallow_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true


[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "plt.show()",
    "plt.savefig(.*)",
    "pass",
    ]

[tool.black]
target-version = [
    "py312",
    "py313",
]

[tool.ruff]
line-length = 88
extend-exclude = [
    "sample-data",
    "docs",
    "site",
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
